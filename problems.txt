class Solution {
public:
    int maxProduct(vector<int>& nums) {
        
        if(nums.size()==0)
        {
            return 0;
        }
        if(nums.size()==1)
        {
            return nums[0];
        }
        int *dp=new int[nums.size()+1];
        int finalmax=0;
        dp[0]=0;
        dp[1]=nums[0];
                   
       for(int i=1;i<nums.size();i++)
        {
            int max1=max(dp[i],nums[i]*dp[i]);
           cout<<max1<<endl;
           cout<<nums[i]<<endl;
           if(nums[i]>max1)
           {
               dp[i+1]=nums[i];
               continue;
           }
           if(max1==(nums[i]*dp[i]))
           {
               dp[i+1]=max1;
              
               
           }
           else
           {
               //finalmax=dp[i+1];
                dp[i+1]=1;
           }
            
        }
        cout<<dp[2]<<endl;
        for(int i=0;i<nums.size()+1;i++)
        {
            if(dp[i]>finalmax)
            {
                finalmax=dp[i];
            }
        }
        //cout<<dp[4]<<endl;
        return finalmax;
    }
};